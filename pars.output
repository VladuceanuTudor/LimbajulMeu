Terminals unused in grammar

    TOK_END
    TOK_PROGR
    TOK_OPARAN
    TOK_CPARAN


State 0 conflicts: 1 shift/reduce
State 6 conflicts: 1 shift/reduce
State 8 conflicts: 1 shift/reduce
State 27 conflicts: 7 shift/reduce
State 58 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce, 13 reduce/reduce
State 95 conflicts: 6 shift/reduce
State 96 conflicts: 6 shift/reduce
State 97 conflicts: 6 shift/reduce
State 98 conflicts: 6 shift/reduce
State 99 conflicts: 1 shift/reduce, 13 reduce/reduce
State 100 conflicts: 6 shift/reduce
State 101 conflicts: 10 shift/reduce
State 102 conflicts: 10 shift/reduce
State 103 conflicts: 10 shift/reduce
State 104 conflicts: 10 shift/reduce
State 105 conflicts: 10 shift/reduce
State 106 conflicts: 10 shift/reduce
State 114 conflicts: 7 shift/reduce


Grammar

    0 $accept: START $end

    1 START: S
    2      | START S

    3 S: Lg P
    4  | P
    5  | TOK_ERR

    6 Lg: Lg D TOK_SEP
    7   | D TOK_SEP

    8 D: TOK_INTREG ID
    9  | TOK_INTREG ID TOK_EQ CTI
   10  | TOK_REAL ID
   11  | TOK_REAL ID TOK_EQ CTR
   12  | TOK_ZECIMAL ID
   13  | TOK_ZECIMAL ID TOK_EQ CTZ

   14 P: TOK_BEGIN BLOCK
   15  | FUNC TOK_BEGIN BLOCK

   16 FUNC: ε

   17 $@1: ε

   18 FUNC: FUNC TOK_FUNC ID $@1 PARAMS TOK_LACC

   19 PARAMS: ε
   20       | PARAMS ID

   21 PARAMS_APEL: ε
   22            | PARAMS_APEL ID

   23 $@2: ε

   24 BLOCK: TOK_LACC $@2 Li TOK_RACC

   25 $@3: ε

   26 IF_BLOCK: TOK_LACC $@3 Li TOK_RACC

   27 Li: ε

   28 $@4: ε

   29 Li: Li WHILE_SETUP TOK_WHILE E TOK_EXECUTE $@4 IF_BLOCK

   30 $@5: ε

   31 Li: Li TOK_DACA E TOK_ATUNCI $@5 IF_BLOCK

   32 $@6: ε

   33 $@7: ε

   34 $@8: ε

   35 Li: Li TOK_Daca E TOK_ATUNCI $@6 IF_BLOCK $@7 TOK_ALTFEL $@8 IF_BLOCK
   36   | Li BLOCK
   37   | Li TOK_COMM
   38   | Li I TOK_SEP
   39   | I TOK_SEP

   40 WHILE_SETUP: ε

   41 I: D
   42  | TOK_CALL ID PARAMS_APEL
   43  | ID TOK_EQ E
   44  | TOK_AFISEAZA PRINT
   45  | TOK_CITESTE SCAN

   46 SCAN: SCAN ID
   47     | ID

   48 PRINT: PRINT ID
   49      | PRINT TXT
   50      | ID
   51      | TXT

   52 E: E TOK_PLUS E
   53  | E TOK_MINUS E
   54  | E TOK_MULT E
   55  | E TOK_DIV E
   56  | ID TOK_DIV E
   57  | E TOK_DIV ID
   58  | ID TOK_DIV ID
   59  | E TOK_EQUAL E
   60  | E TOK_GREATER E
   61  | E TOK_LOWER E
   62  | E TOK_GREQ E
   63  | E TOK_LWEQ E
   64  | E TOK_DIFFERENT E
   65  | TOK_CAST_INTREG ID
   66  | TOK_CAST_REAL ID
   67  | TOK_CAST_ZECIMAL ID
   68  | CTI
   69  | CTR
   70  | CTZ
   71  | ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <str> (258) 8 9 10 11 12 13 18 20 22 42 43 46 47 48 50 56 57 58 65 66 67 71
    TOK_INTREG (259) 8 9
    TOK_REAL (260) 10 11
    TOK_ZECIMAL (261) 12 13
    TOK_EQ (262) 9 11 13 43
    TOK_BEGIN (263) 14 15
    TOK_END (264)
    TOK_PROGR (265)
    TOK_AFISEAZA (266) 44
    TOK_CITESTE (267) 45
    CTI <intVal> (268) 9 68
    CTR <doubleVal> (269) 11 69
    CTZ <floatVal> (270) 13 70
    TOK_PLUS (271) 52
    TOK_MINUS (272) 53
    TOK_MULT (273) 54
    TOK_DIV (274) 55 56 57 58
    TOK_SEP (275) 6 7 38 39
    TOK_OPARAN (276)
    TOK_CPARAN (277)
    TOK_ERR (278) 5
    TOK_COMM (279) 37
    TOK_LACC (280) 18 24 26
    TOK_RACC (281) 24 26
    TXT <str> (282) 49 51
    TOK_LOWER (283) 61
    TOK_GREATER (284) 60
    TOK_EQUAL (285) 59
    TOK_DIFFERENT (286) 64
    TOK_LWEQ (287) 63
    TOK_GREQ (288) 62
    TOK_DACA (289) 31
    TOK_ATUNCI (290) 31 35
    TOK_ALTFEL (291) 35
    TOK_Daca (292) 35
    TOK_WHILE (293) 29
    TOK_EXECUTE (294) 29
    TOK_CAST_INTREG (295) 65
    TOK_CAST_REAL (296) 66
    TOK_CAST_ZECIMAL (297) 67
    TOK_FUNC (298) 18
    TOK_CALL (299) 42


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    START (46)
        on left: 1 2
        on right: 0 2
    S (47)
        on left: 3 4 5
        on right: 1 2
    Lg (48)
        on left: 6 7
        on right: 3 6
    D (49)
        on left: 8 9 10 11 12 13
        on right: 6 7 41
    P (50)
        on left: 14 15
        on right: 3 4
    FUNC (51)
        on left: 16 18
        on right: 15 18
    $@1 (52)
        on left: 17
        on right: 18
    PARAMS (53)
        on left: 19 20
        on right: 18 20
    PARAMS_APEL (54)
        on left: 21 22
        on right: 22 42
    BLOCK (55)
        on left: 24
        on right: 14 15 36
    $@2 (56)
        on left: 23
        on right: 24
    IF_BLOCK (57)
        on left: 26
        on right: 29 31 35
    $@3 (58)
        on left: 25
        on right: 26
    Li (59)
        on left: 27 29 31 35 36 37 38 39
        on right: 24 26 29 31 35 36 37 38
    $@4 (60)
        on left: 28
        on right: 29
    $@5 (61)
        on left: 30
        on right: 31
    $@6 (62)
        on left: 32
        on right: 35
    $@7 (63)
        on left: 33
        on right: 35
    $@8 (64)
        on left: 34
        on right: 35
    WHILE_SETUP (65)
        on left: 40
        on right: 29
    I (66)
        on left: 41 42 43 44 45
        on right: 38 39
    SCAN (67)
        on left: 46 47
        on right: 45 46
    PRINT (68)
        on left: 48 49 50 51
        on right: 44 48 49
    E <doubleVal> (69)
        on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
        on right: 29 31 35 43 52 53 54 55 56 57 59 60 61 62 63 64


State 0

    0 $accept: • START $end

    TOK_INTREG   shift, and go to state 1
    TOK_REAL     shift, and go to state 2
    TOK_ZECIMAL  shift, and go to state 3
    TOK_BEGIN    shift, and go to state 4
    TOK_ERR      shift, and go to state 5

    TOK_BEGIN  [reduce using rule 16 (FUNC)]
    $default   reduce using rule 16 (FUNC)

    START  go to state 6
    S      go to state 7
    Lg     go to state 8
    D      go to state 9
    P      go to state 10
    FUNC   go to state 11


State 1

    8 D: TOK_INTREG • ID
    9  | TOK_INTREG • ID TOK_EQ CTI

    ID  shift, and go to state 12


State 2

   10 D: TOK_REAL • ID
   11  | TOK_REAL • ID TOK_EQ CTR

    ID  shift, and go to state 13


State 3

   12 D: TOK_ZECIMAL • ID
   13  | TOK_ZECIMAL • ID TOK_EQ CTZ

    ID  shift, and go to state 14


State 4

   14 P: TOK_BEGIN • BLOCK

    TOK_LACC  shift, and go to state 15

    BLOCK  go to state 16


State 5

    5 S: TOK_ERR •

    $default  reduce using rule 5 (S)


State 6

    0 $accept: START • $end
    2 START: START • S

    $end         shift, and go to state 17
    TOK_INTREG   shift, and go to state 1
    TOK_REAL     shift, and go to state 2
    TOK_ZECIMAL  shift, and go to state 3
    TOK_BEGIN    shift, and go to state 4
    TOK_ERR      shift, and go to state 5

    TOK_BEGIN  [reduce using rule 16 (FUNC)]
    $default   reduce using rule 16 (FUNC)

    S     go to state 18
    Lg    go to state 8
    D     go to state 9
    P     go to state 10
    FUNC  go to state 11


State 7

    1 START: S •

    $default  reduce using rule 1 (START)


State 8

    3 S: Lg • P
    6 Lg: Lg • D TOK_SEP

    TOK_INTREG   shift, and go to state 1
    TOK_REAL     shift, and go to state 2
    TOK_ZECIMAL  shift, and go to state 3
    TOK_BEGIN    shift, and go to state 4

    TOK_BEGIN  [reduce using rule 16 (FUNC)]
    $default   reduce using rule 16 (FUNC)

    D     go to state 19
    P     go to state 20
    FUNC  go to state 11


State 9

    7 Lg: D • TOK_SEP

    TOK_SEP  shift, and go to state 21


State 10

    4 S: P •

    $default  reduce using rule 4 (S)


State 11

   15 P: FUNC • TOK_BEGIN BLOCK
   18 FUNC: FUNC • TOK_FUNC ID $@1 PARAMS TOK_LACC

    TOK_BEGIN  shift, and go to state 22
    TOK_FUNC   shift, and go to state 23


State 12

    8 D: TOK_INTREG ID •
    9  | TOK_INTREG ID • TOK_EQ CTI

    TOK_EQ  shift, and go to state 24

    $default  reduce using rule 8 (D)


State 13

   10 D: TOK_REAL ID •
   11  | TOK_REAL ID • TOK_EQ CTR

    TOK_EQ  shift, and go to state 25

    $default  reduce using rule 10 (D)


State 14

   12 D: TOK_ZECIMAL ID •
   13  | TOK_ZECIMAL ID • TOK_EQ CTZ

    TOK_EQ  shift, and go to state 26

    $default  reduce using rule 12 (D)


State 15

   24 BLOCK: TOK_LACC • $@2 Li TOK_RACC

    $default  reduce using rule 23 ($@2)

    $@2  go to state 27


State 16

   14 P: TOK_BEGIN BLOCK •

    $default  reduce using rule 14 (P)


State 17

    0 $accept: START $end •

    $default  accept


State 18

    2 START: START S •

    $default  reduce using rule 2 (START)


State 19

    6 Lg: Lg D • TOK_SEP

    TOK_SEP  shift, and go to state 28


State 20

    3 S: Lg P •

    $default  reduce using rule 3 (S)


State 21

    7 Lg: D TOK_SEP •

    $default  reduce using rule 7 (Lg)


State 22

   15 P: FUNC TOK_BEGIN • BLOCK

    TOK_LACC  shift, and go to state 15

    BLOCK  go to state 29


State 23

   18 FUNC: FUNC TOK_FUNC • ID $@1 PARAMS TOK_LACC

    ID  shift, and go to state 30


State 24

    9 D: TOK_INTREG ID TOK_EQ • CTI

    CTI  shift, and go to state 31


State 25

   11 D: TOK_REAL ID TOK_EQ • CTR

    CTR  shift, and go to state 32


State 26

   13 D: TOK_ZECIMAL ID TOK_EQ • CTZ

    CTZ  shift, and go to state 33


State 27

   24 BLOCK: TOK_LACC $@2 • Li TOK_RACC

    ID            shift, and go to state 34
    TOK_INTREG    shift, and go to state 1
    TOK_REAL      shift, and go to state 2
    TOK_ZECIMAL   shift, and go to state 3
    TOK_AFISEAZA  shift, and go to state 35
    TOK_CITESTE   shift, and go to state 36
    TOK_CALL      shift, and go to state 37

    ID            [reduce using rule 27 (Li)]
    TOK_INTREG    [reduce using rule 27 (Li)]
    TOK_REAL      [reduce using rule 27 (Li)]
    TOK_ZECIMAL   [reduce using rule 27 (Li)]
    TOK_AFISEAZA  [reduce using rule 27 (Li)]
    TOK_CITESTE   [reduce using rule 27 (Li)]
    TOK_CALL      [reduce using rule 27 (Li)]
    $default      reduce using rule 27 (Li)

    D   go to state 38
    Li  go to state 39
    I   go to state 40


State 28

    6 Lg: Lg D TOK_SEP •

    $default  reduce using rule 6 (Lg)


State 29

   15 P: FUNC TOK_BEGIN BLOCK •

    $default  reduce using rule 15 (P)


State 30

   18 FUNC: FUNC TOK_FUNC ID • $@1 PARAMS TOK_LACC

    $default  reduce using rule 17 ($@1)

    $@1  go to state 41


State 31

    9 D: TOK_INTREG ID TOK_EQ CTI •

    $default  reduce using rule 9 (D)


State 32

   11 D: TOK_REAL ID TOK_EQ CTR •

    $default  reduce using rule 11 (D)


State 33

   13 D: TOK_ZECIMAL ID TOK_EQ CTZ •

    $default  reduce using rule 13 (D)


State 34

   43 I: ID • TOK_EQ E

    TOK_EQ  shift, and go to state 42


State 35

   44 I: TOK_AFISEAZA • PRINT

    ID   shift, and go to state 43
    TXT  shift, and go to state 44

    PRINT  go to state 45


State 36

   45 I: TOK_CITESTE • SCAN

    ID  shift, and go to state 46

    SCAN  go to state 47


State 37

   42 I: TOK_CALL • ID PARAMS_APEL

    ID  shift, and go to state 48


State 38

   41 I: D •

    $default  reduce using rule 41 (I)


State 39

   24 BLOCK: TOK_LACC $@2 Li • TOK_RACC
   29 Li: Li • WHILE_SETUP TOK_WHILE E TOK_EXECUTE $@4 IF_BLOCK
   31   | Li • TOK_DACA E TOK_ATUNCI $@5 IF_BLOCK
   35   | Li • TOK_Daca E TOK_ATUNCI $@6 IF_BLOCK $@7 TOK_ALTFEL $@8 IF_BLOCK
   36   | Li • BLOCK
   37   | Li • TOK_COMM
   38   | Li • I TOK_SEP

    ID            shift, and go to state 34
    TOK_INTREG    shift, and go to state 1
    TOK_REAL      shift, and go to state 2
    TOK_ZECIMAL   shift, and go to state 3
    TOK_AFISEAZA  shift, and go to state 35
    TOK_CITESTE   shift, and go to state 36
    TOK_COMM      shift, and go to state 49
    TOK_LACC      shift, and go to state 15
    TOK_RACC      shift, and go to state 50
    TOK_DACA      shift, and go to state 51
    TOK_Daca      shift, and go to state 52
    TOK_CALL      shift, and go to state 37

    $default  reduce using rule 40 (WHILE_SETUP)

    D            go to state 38
    BLOCK        go to state 53
    WHILE_SETUP  go to state 54
    I            go to state 55


State 40

   39 Li: I • TOK_SEP

    TOK_SEP  shift, and go to state 56


State 41

   18 FUNC: FUNC TOK_FUNC ID $@1 • PARAMS TOK_LACC

    $default  reduce using rule 19 (PARAMS)

    PARAMS  go to state 57


State 42

   43 I: ID TOK_EQ • E

    ID                shift, and go to state 58
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 65


State 43

   50 PRINT: ID •

    $default  reduce using rule 50 (PRINT)


State 44

   51 PRINT: TXT •

    $default  reduce using rule 51 (PRINT)


State 45

   44 I: TOK_AFISEAZA PRINT •
   48 PRINT: PRINT • ID
   49      | PRINT • TXT

    ID   shift, and go to state 66
    TXT  shift, and go to state 67

    $default  reduce using rule 44 (I)


State 46

   47 SCAN: ID •

    $default  reduce using rule 47 (SCAN)


State 47

   45 I: TOK_CITESTE SCAN •
   46 SCAN: SCAN • ID

    ID  shift, and go to state 68

    $default  reduce using rule 45 (I)


State 48

   42 I: TOK_CALL ID • PARAMS_APEL

    $default  reduce using rule 21 (PARAMS_APEL)

    PARAMS_APEL  go to state 69


State 49

   37 Li: Li TOK_COMM •

    $default  reduce using rule 37 (Li)


State 50

   24 BLOCK: TOK_LACC $@2 Li TOK_RACC •

    $default  reduce using rule 24 (BLOCK)


State 51

   31 Li: Li TOK_DACA • E TOK_ATUNCI $@5 IF_BLOCK

    ID                shift, and go to state 58
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 70


State 52

   35 Li: Li TOK_Daca • E TOK_ATUNCI $@6 IF_BLOCK $@7 TOK_ALTFEL $@8 IF_BLOCK

    ID                shift, and go to state 58
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 71


State 53

   36 Li: Li BLOCK •

    $default  reduce using rule 36 (Li)


State 54

   29 Li: Li WHILE_SETUP • TOK_WHILE E TOK_EXECUTE $@4 IF_BLOCK

    TOK_WHILE  shift, and go to state 72


State 55

   38 Li: Li I • TOK_SEP

    TOK_SEP  shift, and go to state 73


State 56

   39 Li: I TOK_SEP •

    $default  reduce using rule 39 (Li)


State 57

   18 FUNC: FUNC TOK_FUNC ID $@1 PARAMS • TOK_LACC
   20 PARAMS: PARAMS • ID

    ID        shift, and go to state 74
    TOK_LACC  shift, and go to state 75


State 58

   56 E: ID • TOK_DIV E
   58  | ID • TOK_DIV ID
   71  | ID •

    TOK_DIV  shift, and go to state 76

    TOK_DIV   [reduce using rule 71 (E)]
    $default  reduce using rule 71 (E)


State 59

   68 E: CTI •

    $default  reduce using rule 68 (E)


State 60

   69 E: CTR •

    $default  reduce using rule 69 (E)


State 61

   70 E: CTZ •

    $default  reduce using rule 70 (E)


State 62

   65 E: TOK_CAST_INTREG • ID

    ID  shift, and go to state 77


State 63

   66 E: TOK_CAST_REAL • ID

    ID  shift, and go to state 78


State 64

   67 E: TOK_CAST_ZECIMAL • ID

    ID  shift, and go to state 79


State 65

   43 I: ID TOK_EQ E •
   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 80
    TOK_MINUS      shift, and go to state 81
    TOK_MULT       shift, and go to state 82
    TOK_DIV        shift, and go to state 83
    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89

    $default  reduce using rule 43 (I)


State 66

   48 PRINT: PRINT ID •

    $default  reduce using rule 48 (PRINT)


State 67

   49 PRINT: PRINT TXT •

    $default  reduce using rule 49 (PRINT)


State 68

   46 SCAN: SCAN ID •

    $default  reduce using rule 46 (SCAN)


State 69

   22 PARAMS_APEL: PARAMS_APEL • ID
   42 I: TOK_CALL ID PARAMS_APEL •

    ID  shift, and go to state 90

    $default  reduce using rule 42 (I)


State 70

   31 Li: Li TOK_DACA E • TOK_ATUNCI $@5 IF_BLOCK
   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 80
    TOK_MINUS      shift, and go to state 81
    TOK_MULT       shift, and go to state 82
    TOK_DIV        shift, and go to state 83
    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89
    TOK_ATUNCI     shift, and go to state 91


State 71

   35 Li: Li TOK_Daca E • TOK_ATUNCI $@6 IF_BLOCK $@7 TOK_ALTFEL $@8 IF_BLOCK
   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 80
    TOK_MINUS      shift, and go to state 81
    TOK_MULT       shift, and go to state 82
    TOK_DIV        shift, and go to state 83
    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89
    TOK_ATUNCI     shift, and go to state 92


State 72

   29 Li: Li WHILE_SETUP TOK_WHILE • E TOK_EXECUTE $@4 IF_BLOCK

    ID                shift, and go to state 58
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 93


State 73

   38 Li: Li I TOK_SEP •

    $default  reduce using rule 38 (Li)


State 74

   20 PARAMS: PARAMS ID •

    $default  reduce using rule 20 (PARAMS)


State 75

   18 FUNC: FUNC TOK_FUNC ID $@1 PARAMS TOK_LACC •

    $default  reduce using rule 18 (FUNC)


State 76

   56 E: ID TOK_DIV • E
   58  | ID TOK_DIV • ID

    ID                shift, and go to state 94
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 95


State 77

   65 E: TOK_CAST_INTREG ID •

    $default  reduce using rule 65 (E)


State 78

   66 E: TOK_CAST_REAL ID •

    $default  reduce using rule 66 (E)


State 79

   67 E: TOK_CAST_ZECIMAL ID •

    $default  reduce using rule 67 (E)


State 80

   52 E: E TOK_PLUS • E

    ID                shift, and go to state 58
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 96


State 81

   53 E: E TOK_MINUS • E

    ID                shift, and go to state 58
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 97


State 82

   54 E: E TOK_MULT • E

    ID                shift, and go to state 58
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 98


State 83

   55 E: E TOK_DIV • E
   57  | E TOK_DIV • ID

    ID                shift, and go to state 99
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 100


State 84

   61 E: E TOK_LOWER • E

    ID                shift, and go to state 58
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 101


State 85

   60 E: E TOK_GREATER • E

    ID                shift, and go to state 58
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 102


State 86

   59 E: E TOK_EQUAL • E

    ID                shift, and go to state 58
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 103


State 87

   64 E: E TOK_DIFFERENT • E

    ID                shift, and go to state 58
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 104


State 88

   63 E: E TOK_LWEQ • E

    ID                shift, and go to state 58
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 105


State 89

   62 E: E TOK_GREQ • E

    ID                shift, and go to state 58
    CTI               shift, and go to state 59
    CTR               shift, and go to state 60
    CTZ               shift, and go to state 61
    TOK_CAST_INTREG   shift, and go to state 62
    TOK_CAST_REAL     shift, and go to state 63
    TOK_CAST_ZECIMAL  shift, and go to state 64

    E  go to state 106


State 90

   22 PARAMS_APEL: PARAMS_APEL ID •

    $default  reduce using rule 22 (PARAMS_APEL)


State 91

   31 Li: Li TOK_DACA E TOK_ATUNCI • $@5 IF_BLOCK

    $default  reduce using rule 30 ($@5)

    $@5  go to state 107


State 92

   35 Li: Li TOK_Daca E TOK_ATUNCI • $@6 IF_BLOCK $@7 TOK_ALTFEL $@8 IF_BLOCK

    $default  reduce using rule 32 ($@6)

    $@6  go to state 108


State 93

   29 Li: Li WHILE_SETUP TOK_WHILE E • TOK_EXECUTE $@4 IF_BLOCK
   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 80
    TOK_MINUS      shift, and go to state 81
    TOK_MULT       shift, and go to state 82
    TOK_DIV        shift, and go to state 83
    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89
    TOK_EXECUTE    shift, and go to state 109


State 94

   56 E: ID • TOK_DIV E
   58  | ID • TOK_DIV ID
   58  | ID TOK_DIV ID •
   71  | ID •

    TOK_DIV  shift, and go to state 76

    TOK_PLUS       reduce using rule 58 (E)
    TOK_PLUS       [reduce using rule 71 (E)]
    TOK_MINUS      reduce using rule 58 (E)
    TOK_MINUS      [reduce using rule 71 (E)]
    TOK_MULT       reduce using rule 58 (E)
    TOK_MULT       [reduce using rule 71 (E)]
    TOK_DIV        [reduce using rule 58 (E)]
    TOK_DIV        [reduce using rule 71 (E)]
    TOK_SEP        reduce using rule 58 (E)
    TOK_SEP        [reduce using rule 71 (E)]
    TOK_LOWER      reduce using rule 58 (E)
    TOK_LOWER      [reduce using rule 71 (E)]
    TOK_GREATER    reduce using rule 58 (E)
    TOK_GREATER    [reduce using rule 71 (E)]
    TOK_EQUAL      reduce using rule 58 (E)
    TOK_EQUAL      [reduce using rule 71 (E)]
    TOK_DIFFERENT  reduce using rule 58 (E)
    TOK_DIFFERENT  [reduce using rule 71 (E)]
    TOK_LWEQ       reduce using rule 58 (E)
    TOK_LWEQ       [reduce using rule 71 (E)]
    TOK_GREQ       reduce using rule 58 (E)
    TOK_GREQ       [reduce using rule 71 (E)]
    TOK_ATUNCI     reduce using rule 58 (E)
    TOK_ATUNCI     [reduce using rule 71 (E)]
    TOK_EXECUTE    reduce using rule 58 (E)
    TOK_EXECUTE    [reduce using rule 71 (E)]
    $default       reduce using rule 58 (E)


State 95

   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   56  | ID TOK_DIV E •
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E

    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89

    TOK_LOWER      [reduce using rule 56 (E)]
    TOK_GREATER    [reduce using rule 56 (E)]
    TOK_EQUAL      [reduce using rule 56 (E)]
    TOK_DIFFERENT  [reduce using rule 56 (E)]
    TOK_LWEQ       [reduce using rule 56 (E)]
    TOK_GREQ       [reduce using rule 56 (E)]
    $default       reduce using rule 56 (E)


State 96

   52 E: E • TOK_PLUS E
   52  | E TOK_PLUS E •
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E

    TOK_MULT       shift, and go to state 82
    TOK_DIV        shift, and go to state 83
    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89

    TOK_LOWER      [reduce using rule 52 (E)]
    TOK_GREATER    [reduce using rule 52 (E)]
    TOK_EQUAL      [reduce using rule 52 (E)]
    TOK_DIFFERENT  [reduce using rule 52 (E)]
    TOK_LWEQ       [reduce using rule 52 (E)]
    TOK_GREQ       [reduce using rule 52 (E)]
    $default       reduce using rule 52 (E)


State 97

   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   53  | E TOK_MINUS E •
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E

    TOK_MULT       shift, and go to state 82
    TOK_DIV        shift, and go to state 83
    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89

    TOK_LOWER      [reduce using rule 53 (E)]
    TOK_GREATER    [reduce using rule 53 (E)]
    TOK_EQUAL      [reduce using rule 53 (E)]
    TOK_DIFFERENT  [reduce using rule 53 (E)]
    TOK_LWEQ       [reduce using rule 53 (E)]
    TOK_GREQ       [reduce using rule 53 (E)]
    $default       reduce using rule 53 (E)


State 98

   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   54  | E TOK_MULT E •
   55  | E • TOK_DIV E
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E

    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89

    TOK_LOWER      [reduce using rule 54 (E)]
    TOK_GREATER    [reduce using rule 54 (E)]
    TOK_EQUAL      [reduce using rule 54 (E)]
    TOK_DIFFERENT  [reduce using rule 54 (E)]
    TOK_LWEQ       [reduce using rule 54 (E)]
    TOK_GREQ       [reduce using rule 54 (E)]
    $default       reduce using rule 54 (E)


State 99

   56 E: ID • TOK_DIV E
   57  | E TOK_DIV ID •
   58  | ID • TOK_DIV ID
   71  | ID •

    TOK_DIV  shift, and go to state 76

    TOK_PLUS       reduce using rule 57 (E)
    TOK_PLUS       [reduce using rule 71 (E)]
    TOK_MINUS      reduce using rule 57 (E)
    TOK_MINUS      [reduce using rule 71 (E)]
    TOK_MULT       reduce using rule 57 (E)
    TOK_MULT       [reduce using rule 71 (E)]
    TOK_DIV        [reduce using rule 57 (E)]
    TOK_DIV        [reduce using rule 71 (E)]
    TOK_SEP        reduce using rule 57 (E)
    TOK_SEP        [reduce using rule 71 (E)]
    TOK_LOWER      reduce using rule 57 (E)
    TOK_LOWER      [reduce using rule 71 (E)]
    TOK_GREATER    reduce using rule 57 (E)
    TOK_GREATER    [reduce using rule 71 (E)]
    TOK_EQUAL      reduce using rule 57 (E)
    TOK_EQUAL      [reduce using rule 71 (E)]
    TOK_DIFFERENT  reduce using rule 57 (E)
    TOK_DIFFERENT  [reduce using rule 71 (E)]
    TOK_LWEQ       reduce using rule 57 (E)
    TOK_LWEQ       [reduce using rule 71 (E)]
    TOK_GREQ       reduce using rule 57 (E)
    TOK_GREQ       [reduce using rule 71 (E)]
    TOK_ATUNCI     reduce using rule 57 (E)
    TOK_ATUNCI     [reduce using rule 71 (E)]
    TOK_EXECUTE    reduce using rule 57 (E)
    TOK_EXECUTE    [reduce using rule 71 (E)]
    $default       reduce using rule 57 (E)


State 100

   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   55  | E TOK_DIV E •
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E

    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89

    TOK_LOWER      [reduce using rule 55 (E)]
    TOK_GREATER    [reduce using rule 55 (E)]
    TOK_EQUAL      [reduce using rule 55 (E)]
    TOK_DIFFERENT  [reduce using rule 55 (E)]
    TOK_LWEQ       [reduce using rule 55 (E)]
    TOK_GREQ       [reduce using rule 55 (E)]
    $default       reduce using rule 55 (E)


State 101

   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   61  | E TOK_LOWER E •
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 80
    TOK_MINUS      shift, and go to state 81
    TOK_MULT       shift, and go to state 82
    TOK_DIV        shift, and go to state 83
    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89

    TOK_PLUS       [reduce using rule 61 (E)]
    TOK_MINUS      [reduce using rule 61 (E)]
    TOK_MULT       [reduce using rule 61 (E)]
    TOK_DIV        [reduce using rule 61 (E)]
    TOK_LOWER      [reduce using rule 61 (E)]
    TOK_GREATER    [reduce using rule 61 (E)]
    TOK_EQUAL      [reduce using rule 61 (E)]
    TOK_DIFFERENT  [reduce using rule 61 (E)]
    TOK_LWEQ       [reduce using rule 61 (E)]
    TOK_GREQ       [reduce using rule 61 (E)]
    $default       reduce using rule 61 (E)


State 102

   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   60  | E TOK_GREATER E •
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 80
    TOK_MINUS      shift, and go to state 81
    TOK_MULT       shift, and go to state 82
    TOK_DIV        shift, and go to state 83
    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89

    TOK_PLUS       [reduce using rule 60 (E)]
    TOK_MINUS      [reduce using rule 60 (E)]
    TOK_MULT       [reduce using rule 60 (E)]
    TOK_DIV        [reduce using rule 60 (E)]
    TOK_LOWER      [reduce using rule 60 (E)]
    TOK_GREATER    [reduce using rule 60 (E)]
    TOK_EQUAL      [reduce using rule 60 (E)]
    TOK_DIFFERENT  [reduce using rule 60 (E)]
    TOK_LWEQ       [reduce using rule 60 (E)]
    TOK_GREQ       [reduce using rule 60 (E)]
    $default       reduce using rule 60 (E)


State 103

   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   59  | E TOK_EQUAL E •
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 80
    TOK_MINUS      shift, and go to state 81
    TOK_MULT       shift, and go to state 82
    TOK_DIV        shift, and go to state 83
    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89

    TOK_PLUS       [reduce using rule 59 (E)]
    TOK_MINUS      [reduce using rule 59 (E)]
    TOK_MULT       [reduce using rule 59 (E)]
    TOK_DIV        [reduce using rule 59 (E)]
    TOK_LOWER      [reduce using rule 59 (E)]
    TOK_GREATER    [reduce using rule 59 (E)]
    TOK_EQUAL      [reduce using rule 59 (E)]
    TOK_DIFFERENT  [reduce using rule 59 (E)]
    TOK_LWEQ       [reduce using rule 59 (E)]
    TOK_GREQ       [reduce using rule 59 (E)]
    $default       reduce using rule 59 (E)


State 104

   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E
   64  | E TOK_DIFFERENT E •

    TOK_PLUS       shift, and go to state 80
    TOK_MINUS      shift, and go to state 81
    TOK_MULT       shift, and go to state 82
    TOK_DIV        shift, and go to state 83
    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89

    TOK_PLUS       [reduce using rule 64 (E)]
    TOK_MINUS      [reduce using rule 64 (E)]
    TOK_MULT       [reduce using rule 64 (E)]
    TOK_DIV        [reduce using rule 64 (E)]
    TOK_LOWER      [reduce using rule 64 (E)]
    TOK_GREATER    [reduce using rule 64 (E)]
    TOK_EQUAL      [reduce using rule 64 (E)]
    TOK_DIFFERENT  [reduce using rule 64 (E)]
    TOK_LWEQ       [reduce using rule 64 (E)]
    TOK_GREQ       [reduce using rule 64 (E)]
    $default       reduce using rule 64 (E)


State 105

   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   63  | E • TOK_LWEQ E
   63  | E TOK_LWEQ E •
   64  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 80
    TOK_MINUS      shift, and go to state 81
    TOK_MULT       shift, and go to state 82
    TOK_DIV        shift, and go to state 83
    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89

    TOK_PLUS       [reduce using rule 63 (E)]
    TOK_MINUS      [reduce using rule 63 (E)]
    TOK_MULT       [reduce using rule 63 (E)]
    TOK_DIV        [reduce using rule 63 (E)]
    TOK_LOWER      [reduce using rule 63 (E)]
    TOK_GREATER    [reduce using rule 63 (E)]
    TOK_EQUAL      [reduce using rule 63 (E)]
    TOK_DIFFERENT  [reduce using rule 63 (E)]
    TOK_LWEQ       [reduce using rule 63 (E)]
    TOK_GREQ       [reduce using rule 63 (E)]
    $default       reduce using rule 63 (E)


State 106

   52 E: E • TOK_PLUS E
   53  | E • TOK_MINUS E
   54  | E • TOK_MULT E
   55  | E • TOK_DIV E
   57  | E • TOK_DIV ID
   59  | E • TOK_EQUAL E
   60  | E • TOK_GREATER E
   61  | E • TOK_LOWER E
   62  | E • TOK_GREQ E
   62  | E TOK_GREQ E •
   63  | E • TOK_LWEQ E
   64  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 80
    TOK_MINUS      shift, and go to state 81
    TOK_MULT       shift, and go to state 82
    TOK_DIV        shift, and go to state 83
    TOK_LOWER      shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_EQUAL      shift, and go to state 86
    TOK_DIFFERENT  shift, and go to state 87
    TOK_LWEQ       shift, and go to state 88
    TOK_GREQ       shift, and go to state 89

    TOK_PLUS       [reduce using rule 62 (E)]
    TOK_MINUS      [reduce using rule 62 (E)]
    TOK_MULT       [reduce using rule 62 (E)]
    TOK_DIV        [reduce using rule 62 (E)]
    TOK_LOWER      [reduce using rule 62 (E)]
    TOK_GREATER    [reduce using rule 62 (E)]
    TOK_EQUAL      [reduce using rule 62 (E)]
    TOK_DIFFERENT  [reduce using rule 62 (E)]
    TOK_LWEQ       [reduce using rule 62 (E)]
    TOK_GREQ       [reduce using rule 62 (E)]
    $default       reduce using rule 62 (E)


State 107

   31 Li: Li TOK_DACA E TOK_ATUNCI $@5 • IF_BLOCK

    TOK_LACC  shift, and go to state 110

    IF_BLOCK  go to state 111


State 108

   35 Li: Li TOK_Daca E TOK_ATUNCI $@6 • IF_BLOCK $@7 TOK_ALTFEL $@8 IF_BLOCK

    TOK_LACC  shift, and go to state 110

    IF_BLOCK  go to state 112


State 109

   29 Li: Li WHILE_SETUP TOK_WHILE E TOK_EXECUTE • $@4 IF_BLOCK

    $default  reduce using rule 28 ($@4)

    $@4  go to state 113


State 110

   26 IF_BLOCK: TOK_LACC • $@3 Li TOK_RACC

    $default  reduce using rule 25 ($@3)

    $@3  go to state 114


State 111

   31 Li: Li TOK_DACA E TOK_ATUNCI $@5 IF_BLOCK •

    $default  reduce using rule 31 (Li)


State 112

   35 Li: Li TOK_Daca E TOK_ATUNCI $@6 IF_BLOCK • $@7 TOK_ALTFEL $@8 IF_BLOCK

    $default  reduce using rule 33 ($@7)

    $@7  go to state 115


State 113

   29 Li: Li WHILE_SETUP TOK_WHILE E TOK_EXECUTE $@4 • IF_BLOCK

    TOK_LACC  shift, and go to state 110

    IF_BLOCK  go to state 116


State 114

   26 IF_BLOCK: TOK_LACC $@3 • Li TOK_RACC

    ID            shift, and go to state 34
    TOK_INTREG    shift, and go to state 1
    TOK_REAL      shift, and go to state 2
    TOK_ZECIMAL   shift, and go to state 3
    TOK_AFISEAZA  shift, and go to state 35
    TOK_CITESTE   shift, and go to state 36
    TOK_CALL      shift, and go to state 37

    ID            [reduce using rule 27 (Li)]
    TOK_INTREG    [reduce using rule 27 (Li)]
    TOK_REAL      [reduce using rule 27 (Li)]
    TOK_ZECIMAL   [reduce using rule 27 (Li)]
    TOK_AFISEAZA  [reduce using rule 27 (Li)]
    TOK_CITESTE   [reduce using rule 27 (Li)]
    TOK_CALL      [reduce using rule 27 (Li)]
    $default      reduce using rule 27 (Li)

    D   go to state 38
    Li  go to state 117
    I   go to state 40


State 115

   35 Li: Li TOK_Daca E TOK_ATUNCI $@6 IF_BLOCK $@7 • TOK_ALTFEL $@8 IF_BLOCK

    TOK_ALTFEL  shift, and go to state 118


State 116

   29 Li: Li WHILE_SETUP TOK_WHILE E TOK_EXECUTE $@4 IF_BLOCK •

    $default  reduce using rule 29 (Li)


State 117

   26 IF_BLOCK: TOK_LACC $@3 Li • TOK_RACC
   29 Li: Li • WHILE_SETUP TOK_WHILE E TOK_EXECUTE $@4 IF_BLOCK
   31   | Li • TOK_DACA E TOK_ATUNCI $@5 IF_BLOCK
   35   | Li • TOK_Daca E TOK_ATUNCI $@6 IF_BLOCK $@7 TOK_ALTFEL $@8 IF_BLOCK
   36   | Li • BLOCK
   37   | Li • TOK_COMM
   38   | Li • I TOK_SEP

    ID            shift, and go to state 34
    TOK_INTREG    shift, and go to state 1
    TOK_REAL      shift, and go to state 2
    TOK_ZECIMAL   shift, and go to state 3
    TOK_AFISEAZA  shift, and go to state 35
    TOK_CITESTE   shift, and go to state 36
    TOK_COMM      shift, and go to state 49
    TOK_LACC      shift, and go to state 15
    TOK_RACC      shift, and go to state 119
    TOK_DACA      shift, and go to state 51
    TOK_Daca      shift, and go to state 52
    TOK_CALL      shift, and go to state 37

    $default  reduce using rule 40 (WHILE_SETUP)

    D            go to state 38
    BLOCK        go to state 53
    WHILE_SETUP  go to state 54
    I            go to state 55


State 118

   35 Li: Li TOK_Daca E TOK_ATUNCI $@6 IF_BLOCK $@7 TOK_ALTFEL • $@8 IF_BLOCK

    $default  reduce using rule 34 ($@8)

    $@8  go to state 120


State 119

   26 IF_BLOCK: TOK_LACC $@3 Li TOK_RACC •

    $default  reduce using rule 26 (IF_BLOCK)


State 120

   35 Li: Li TOK_Daca E TOK_ATUNCI $@6 IF_BLOCK $@7 TOK_ALTFEL $@8 • IF_BLOCK

    TOK_LACC  shift, and go to state 110

    IF_BLOCK  go to state 121


State 121

   35 Li: Li TOK_Daca E TOK_ATUNCI $@6 IF_BLOCK $@7 TOK_ALTFEL $@8 IF_BLOCK •

    $default  reduce using rule 35 (Li)
