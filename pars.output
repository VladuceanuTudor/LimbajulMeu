Terminals unused in grammar

    TOK_END
    TOK_PROGR
    TOK_OPARAN
    TOK_CPARAN


State 24 conflicts: 6 shift/reduce
State 74 conflicts: 6 shift/reduce
State 75 conflicts: 6 shift/reduce
State 76 conflicts: 6 shift/reduce
State 77 conflicts: 6 shift/reduce
State 78 conflicts: 10 shift/reduce
State 79 conflicts: 10 shift/reduce
State 80 conflicts: 10 shift/reduce
State 81 conflicts: 10 shift/reduce
State 82 conflicts: 10 shift/reduce
State 83 conflicts: 10 shift/reduce
State 91 conflicts: 6 shift/reduce


Grammar

    0 $accept: START $end

    1 START: S
    2      | START S

    3 S: Lg P
    4  | P
    5  | TOK_ERR

    6 Lg: Lg D TOK_SEP
    7   | D TOK_SEP

    8 D: TOK_INTREG ID
    9  | TOK_INTREG ID TOK_EQ CTI
   10  | TOK_REAL ID
   11  | TOK_REAL ID TOK_EQ CTR
   12  | TOK_ZECIMAL ID
   13  | TOK_ZECIMAL ID TOK_EQ CTZ

   14 P: TOK_BEGIN BLOCK

   15 $@1: ε

   16 BLOCK: TOK_LACC $@1 Li TOK_RACC

   17 $@2: ε

   18 IF_BLOCK: TOK_LACC $@2 Li TOK_RACC

   19 Li: ε

   20 $@3: ε

   21 Li: Li WHILE_SETUP TOK_WHILE E TOK_EXECUTE $@3 IF_BLOCK

   22 $@4: ε

   23 Li: Li TOK_DACA E TOK_ATUNCI $@4 IF_BLOCK

   24 $@5: ε

   25 $@6: ε

   26 $@7: ε

   27 Li: Li TOK_Daca E TOK_ATUNCI $@5 IF_BLOCK $@6 TOK_ALTFEL $@7 IF_BLOCK
   28   | Li BLOCK
   29   | Li TOK_COMM
   30   | Li I TOK_SEP
   31   | I TOK_SEP

   32 WHILE_SETUP: ε

   33 I: D
   34  | ID TOK_EQ E
   35  | TOK_AFISEAZA PRINT
   36  | TOK_CITESTE SCAN

   37 SCAN: SCAN ID
   38     | ID

   39 PRINT: PRINT ID
   40      | PRINT TXT
   41      | ID
   42      | TXT

   43 E: E TOK_PLUS E
   44  | E TOK_MINUS E
   45  | E TOK_MULT E
   46  | E TOK_DIV E
   47  | E TOK_EQUAL E
   48  | E TOK_GREATER E
   49  | E TOK_LOWER E
   50  | E TOK_GREQ E
   51  | E TOK_LWEQ E
   52  | E TOK_DIFFERENT E
   53  | CTI
   54  | CTR
   55  | CTZ
   56  | ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <str> (258) 8 9 10 11 12 13 34 37 38 39 41 56
    TOK_INTREG (259) 8 9
    TOK_REAL (260) 10 11
    TOK_ZECIMAL (261) 12 13
    TOK_EQ (262) 9 11 13 34
    TOK_BEGIN (263) 14
    TOK_END (264)
    TOK_PROGR (265)
    TOK_AFISEAZA (266) 35
    TOK_CITESTE (267) 36
    CTI <intVal> (268) 9 53
    CTR <doubleVal> (269) 11 54
    CTZ <floatVal> (270) 13 55
    TOK_PLUS (271) 43
    TOK_MINUS (272) 44
    TOK_MULT (273) 45
    TOK_DIV (274) 46
    TOK_SEP (275) 6 7 30 31
    TOK_OPARAN (276)
    TOK_CPARAN (277)
    TOK_ERR (278) 5
    TOK_COMM (279) 29
    TOK_LACC (280) 16 18
    TOK_RACC (281) 16 18
    TXT <str> (282) 40 42
    TOK_LOWER (283) 49
    TOK_GREATER (284) 48
    TOK_EQUAL (285) 47
    TOK_DIFFERENT (286) 52
    TOK_LWEQ (287) 51
    TOK_GREQ (288) 50
    TOK_DACA (289) 23
    TOK_ATUNCI (290) 23 27
    TOK_ALTFEL (291) 27
    TOK_Daca (292) 27
    TOK_WHILE (293) 21
    TOK_EXECUTE (294) 21


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    START (41)
        on left: 1 2
        on right: 0 2
    S (42)
        on left: 3 4 5
        on right: 1 2
    Lg (43)
        on left: 6 7
        on right: 3 6
    D (44)
        on left: 8 9 10 11 12 13
        on right: 6 7 33
    P (45)
        on left: 14
        on right: 3 4
    BLOCK (46)
        on left: 16
        on right: 14 28
    $@1 (47)
        on left: 15
        on right: 16
    IF_BLOCK (48)
        on left: 18
        on right: 21 23 27
    $@2 (49)
        on left: 17
        on right: 18
    Li (50)
        on left: 19 21 23 27 28 29 30 31
        on right: 16 18 21 23 27 28 29 30
    $@3 (51)
        on left: 20
        on right: 21
    $@4 (52)
        on left: 22
        on right: 23
    $@5 (53)
        on left: 24
        on right: 27
    $@6 (54)
        on left: 25
        on right: 27
    $@7 (55)
        on left: 26
        on right: 27
    WHILE_SETUP (56)
        on left: 32
        on right: 21
    I (57)
        on left: 33 34 35 36
        on right: 30 31
    SCAN (58)
        on left: 37 38
        on right: 36 37
    PRINT (59)
        on left: 39 40 41 42
        on right: 35 39 40
    E <doubleVal> (60)
        on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56
        on right: 21 23 27 34 43 44 45 46 47 48 49 50 51 52


State 0

    0 $accept: • START $end

    TOK_INTREG   shift, and go to state 1
    TOK_REAL     shift, and go to state 2
    TOK_ZECIMAL  shift, and go to state 3
    TOK_BEGIN    shift, and go to state 4
    TOK_ERR      shift, and go to state 5

    START  go to state 6
    S      go to state 7
    Lg     go to state 8
    D      go to state 9
    P      go to state 10


State 1

    8 D: TOK_INTREG • ID
    9  | TOK_INTREG • ID TOK_EQ CTI

    ID  shift, and go to state 11


State 2

   10 D: TOK_REAL • ID
   11  | TOK_REAL • ID TOK_EQ CTR

    ID  shift, and go to state 12


State 3

   12 D: TOK_ZECIMAL • ID
   13  | TOK_ZECIMAL • ID TOK_EQ CTZ

    ID  shift, and go to state 13


State 4

   14 P: TOK_BEGIN • BLOCK

    TOK_LACC  shift, and go to state 14

    BLOCK  go to state 15


State 5

    5 S: TOK_ERR •

    $default  reduce using rule 5 (S)


State 6

    0 $accept: START • $end
    2 START: START • S

    $end         shift, and go to state 16
    TOK_INTREG   shift, and go to state 1
    TOK_REAL     shift, and go to state 2
    TOK_ZECIMAL  shift, and go to state 3
    TOK_BEGIN    shift, and go to state 4
    TOK_ERR      shift, and go to state 5

    S   go to state 17
    Lg  go to state 8
    D   go to state 9
    P   go to state 10


State 7

    1 START: S •

    $default  reduce using rule 1 (START)


State 8

    3 S: Lg • P
    6 Lg: Lg • D TOK_SEP

    TOK_INTREG   shift, and go to state 1
    TOK_REAL     shift, and go to state 2
    TOK_ZECIMAL  shift, and go to state 3
    TOK_BEGIN    shift, and go to state 4

    D  go to state 18
    P  go to state 19


State 9

    7 Lg: D • TOK_SEP

    TOK_SEP  shift, and go to state 20


State 10

    4 S: P •

    $default  reduce using rule 4 (S)


State 11

    8 D: TOK_INTREG ID •
    9  | TOK_INTREG ID • TOK_EQ CTI

    TOK_EQ  shift, and go to state 21

    $default  reduce using rule 8 (D)


State 12

   10 D: TOK_REAL ID •
   11  | TOK_REAL ID • TOK_EQ CTR

    TOK_EQ  shift, and go to state 22

    $default  reduce using rule 10 (D)


State 13

   12 D: TOK_ZECIMAL ID •
   13  | TOK_ZECIMAL ID • TOK_EQ CTZ

    TOK_EQ  shift, and go to state 23

    $default  reduce using rule 12 (D)


State 14

   16 BLOCK: TOK_LACC • $@1 Li TOK_RACC

    $default  reduce using rule 15 ($@1)

    $@1  go to state 24


State 15

   14 P: TOK_BEGIN BLOCK •

    $default  reduce using rule 14 (P)


State 16

    0 $accept: START $end •

    $default  accept


State 17

    2 START: START S •

    $default  reduce using rule 2 (START)


State 18

    6 Lg: Lg D • TOK_SEP

    TOK_SEP  shift, and go to state 25


State 19

    3 S: Lg P •

    $default  reduce using rule 3 (S)


State 20

    7 Lg: D TOK_SEP •

    $default  reduce using rule 7 (Lg)


State 21

    9 D: TOK_INTREG ID TOK_EQ • CTI

    CTI  shift, and go to state 26


State 22

   11 D: TOK_REAL ID TOK_EQ • CTR

    CTR  shift, and go to state 27


State 23

   13 D: TOK_ZECIMAL ID TOK_EQ • CTZ

    CTZ  shift, and go to state 28


State 24

   16 BLOCK: TOK_LACC $@1 • Li TOK_RACC

    ID            shift, and go to state 29
    TOK_INTREG    shift, and go to state 1
    TOK_REAL      shift, and go to state 2
    TOK_ZECIMAL   shift, and go to state 3
    TOK_AFISEAZA  shift, and go to state 30
    TOK_CITESTE   shift, and go to state 31

    ID            [reduce using rule 19 (Li)]
    TOK_INTREG    [reduce using rule 19 (Li)]
    TOK_REAL      [reduce using rule 19 (Li)]
    TOK_ZECIMAL   [reduce using rule 19 (Li)]
    TOK_AFISEAZA  [reduce using rule 19 (Li)]
    TOK_CITESTE   [reduce using rule 19 (Li)]
    $default      reduce using rule 19 (Li)

    D   go to state 32
    Li  go to state 33
    I   go to state 34


State 25

    6 Lg: Lg D TOK_SEP •

    $default  reduce using rule 6 (Lg)


State 26

    9 D: TOK_INTREG ID TOK_EQ CTI •

    $default  reduce using rule 9 (D)


State 27

   11 D: TOK_REAL ID TOK_EQ CTR •

    $default  reduce using rule 11 (D)


State 28

   13 D: TOK_ZECIMAL ID TOK_EQ CTZ •

    $default  reduce using rule 13 (D)


State 29

   34 I: ID • TOK_EQ E

    TOK_EQ  shift, and go to state 35


State 30

   35 I: TOK_AFISEAZA • PRINT

    ID   shift, and go to state 36
    TXT  shift, and go to state 37

    PRINT  go to state 38


State 31

   36 I: TOK_CITESTE • SCAN

    ID  shift, and go to state 39

    SCAN  go to state 40


State 32

   33 I: D •

    $default  reduce using rule 33 (I)


State 33

   16 BLOCK: TOK_LACC $@1 Li • TOK_RACC
   21 Li: Li • WHILE_SETUP TOK_WHILE E TOK_EXECUTE $@3 IF_BLOCK
   23   | Li • TOK_DACA E TOK_ATUNCI $@4 IF_BLOCK
   27   | Li • TOK_Daca E TOK_ATUNCI $@5 IF_BLOCK $@6 TOK_ALTFEL $@7 IF_BLOCK
   28   | Li • BLOCK
   29   | Li • TOK_COMM
   30   | Li • I TOK_SEP

    ID            shift, and go to state 29
    TOK_INTREG    shift, and go to state 1
    TOK_REAL      shift, and go to state 2
    TOK_ZECIMAL   shift, and go to state 3
    TOK_AFISEAZA  shift, and go to state 30
    TOK_CITESTE   shift, and go to state 31
    TOK_COMM      shift, and go to state 41
    TOK_LACC      shift, and go to state 14
    TOK_RACC      shift, and go to state 42
    TOK_DACA      shift, and go to state 43
    TOK_Daca      shift, and go to state 44

    $default  reduce using rule 32 (WHILE_SETUP)

    D            go to state 32
    BLOCK        go to state 45
    WHILE_SETUP  go to state 46
    I            go to state 47


State 34

   31 Li: I • TOK_SEP

    TOK_SEP  shift, and go to state 48


State 35

   34 I: ID TOK_EQ • E

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 53


State 36

   41 PRINT: ID •

    $default  reduce using rule 41 (PRINT)


State 37

   42 PRINT: TXT •

    $default  reduce using rule 42 (PRINT)


State 38

   35 I: TOK_AFISEAZA PRINT •
   39 PRINT: PRINT • ID
   40      | PRINT • TXT

    ID   shift, and go to state 54
    TXT  shift, and go to state 55

    $default  reduce using rule 35 (I)


State 39

   38 SCAN: ID •

    $default  reduce using rule 38 (SCAN)


State 40

   36 I: TOK_CITESTE SCAN •
   37 SCAN: SCAN • ID

    ID  shift, and go to state 56

    $default  reduce using rule 36 (I)


State 41

   29 Li: Li TOK_COMM •

    $default  reduce using rule 29 (Li)


State 42

   16 BLOCK: TOK_LACC $@1 Li TOK_RACC •

    $default  reduce using rule 16 (BLOCK)


State 43

   23 Li: Li TOK_DACA • E TOK_ATUNCI $@4 IF_BLOCK

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 57


State 44

   27 Li: Li TOK_Daca • E TOK_ATUNCI $@5 IF_BLOCK $@6 TOK_ALTFEL $@7 IF_BLOCK

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 58


State 45

   28 Li: Li BLOCK •

    $default  reduce using rule 28 (Li)


State 46

   21 Li: Li WHILE_SETUP • TOK_WHILE E TOK_EXECUTE $@3 IF_BLOCK

    TOK_WHILE  shift, and go to state 59


State 47

   30 Li: Li I • TOK_SEP

    TOK_SEP  shift, and go to state 60


State 48

   31 Li: I TOK_SEP •

    $default  reduce using rule 31 (Li)


State 49

   56 E: ID •

    $default  reduce using rule 56 (E)


State 50

   53 E: CTI •

    $default  reduce using rule 53 (E)


State 51

   54 E: CTR •

    $default  reduce using rule 54 (E)


State 52

   55 E: CTZ •

    $default  reduce using rule 55 (E)


State 53

   34 I: ID TOK_EQ E •
   43 E: E • TOK_PLUS E
   44  | E • TOK_MINUS E
   45  | E • TOK_MULT E
   46  | E • TOK_DIV E
   47  | E • TOK_EQUAL E
   48  | E • TOK_GREATER E
   49  | E • TOK_LOWER E
   50  | E • TOK_GREQ E
   51  | E • TOK_LWEQ E
   52  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 61
    TOK_MINUS      shift, and go to state 62
    TOK_MULT       shift, and go to state 63
    TOK_DIV        shift, and go to state 64
    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70

    $default  reduce using rule 34 (I)


State 54

   39 PRINT: PRINT ID •

    $default  reduce using rule 39 (PRINT)


State 55

   40 PRINT: PRINT TXT •

    $default  reduce using rule 40 (PRINT)


State 56

   37 SCAN: SCAN ID •

    $default  reduce using rule 37 (SCAN)


State 57

   23 Li: Li TOK_DACA E • TOK_ATUNCI $@4 IF_BLOCK
   43 E: E • TOK_PLUS E
   44  | E • TOK_MINUS E
   45  | E • TOK_MULT E
   46  | E • TOK_DIV E
   47  | E • TOK_EQUAL E
   48  | E • TOK_GREATER E
   49  | E • TOK_LOWER E
   50  | E • TOK_GREQ E
   51  | E • TOK_LWEQ E
   52  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 61
    TOK_MINUS      shift, and go to state 62
    TOK_MULT       shift, and go to state 63
    TOK_DIV        shift, and go to state 64
    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70
    TOK_ATUNCI     shift, and go to state 71


State 58

   27 Li: Li TOK_Daca E • TOK_ATUNCI $@5 IF_BLOCK $@6 TOK_ALTFEL $@7 IF_BLOCK
   43 E: E • TOK_PLUS E
   44  | E • TOK_MINUS E
   45  | E • TOK_MULT E
   46  | E • TOK_DIV E
   47  | E • TOK_EQUAL E
   48  | E • TOK_GREATER E
   49  | E • TOK_LOWER E
   50  | E • TOK_GREQ E
   51  | E • TOK_LWEQ E
   52  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 61
    TOK_MINUS      shift, and go to state 62
    TOK_MULT       shift, and go to state 63
    TOK_DIV        shift, and go to state 64
    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70
    TOK_ATUNCI     shift, and go to state 72


State 59

   21 Li: Li WHILE_SETUP TOK_WHILE • E TOK_EXECUTE $@3 IF_BLOCK

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 73


State 60

   30 Li: Li I TOK_SEP •

    $default  reduce using rule 30 (Li)


State 61

   43 E: E TOK_PLUS • E

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 74


State 62

   44 E: E TOK_MINUS • E

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 75


State 63

   45 E: E TOK_MULT • E

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 76


State 64

   46 E: E TOK_DIV • E

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 77


State 65

   49 E: E TOK_LOWER • E

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 78


State 66

   48 E: E TOK_GREATER • E

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 79


State 67

   47 E: E TOK_EQUAL • E

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 80


State 68

   52 E: E TOK_DIFFERENT • E

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 81


State 69

   51 E: E TOK_LWEQ • E

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 82


State 70

   50 E: E TOK_GREQ • E

    ID   shift, and go to state 49
    CTI  shift, and go to state 50
    CTR  shift, and go to state 51
    CTZ  shift, and go to state 52

    E  go to state 83


State 71

   23 Li: Li TOK_DACA E TOK_ATUNCI • $@4 IF_BLOCK

    $default  reduce using rule 22 ($@4)

    $@4  go to state 84


State 72

   27 Li: Li TOK_Daca E TOK_ATUNCI • $@5 IF_BLOCK $@6 TOK_ALTFEL $@7 IF_BLOCK

    $default  reduce using rule 24 ($@5)

    $@5  go to state 85


State 73

   21 Li: Li WHILE_SETUP TOK_WHILE E • TOK_EXECUTE $@3 IF_BLOCK
   43 E: E • TOK_PLUS E
   44  | E • TOK_MINUS E
   45  | E • TOK_MULT E
   46  | E • TOK_DIV E
   47  | E • TOK_EQUAL E
   48  | E • TOK_GREATER E
   49  | E • TOK_LOWER E
   50  | E • TOK_GREQ E
   51  | E • TOK_LWEQ E
   52  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 61
    TOK_MINUS      shift, and go to state 62
    TOK_MULT       shift, and go to state 63
    TOK_DIV        shift, and go to state 64
    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70
    TOK_EXECUTE    shift, and go to state 86


State 74

   43 E: E • TOK_PLUS E
   43  | E TOK_PLUS E •
   44  | E • TOK_MINUS E
   45  | E • TOK_MULT E
   46  | E • TOK_DIV E
   47  | E • TOK_EQUAL E
   48  | E • TOK_GREATER E
   49  | E • TOK_LOWER E
   50  | E • TOK_GREQ E
   51  | E • TOK_LWEQ E
   52  | E • TOK_DIFFERENT E

    TOK_MULT       shift, and go to state 63
    TOK_DIV        shift, and go to state 64
    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70

    TOK_LOWER      [reduce using rule 43 (E)]
    TOK_GREATER    [reduce using rule 43 (E)]
    TOK_EQUAL      [reduce using rule 43 (E)]
    TOK_DIFFERENT  [reduce using rule 43 (E)]
    TOK_LWEQ       [reduce using rule 43 (E)]
    TOK_GREQ       [reduce using rule 43 (E)]
    $default       reduce using rule 43 (E)


State 75

   43 E: E • TOK_PLUS E
   44  | E • TOK_MINUS E
   44  | E TOK_MINUS E •
   45  | E • TOK_MULT E
   46  | E • TOK_DIV E
   47  | E • TOK_EQUAL E
   48  | E • TOK_GREATER E
   49  | E • TOK_LOWER E
   50  | E • TOK_GREQ E
   51  | E • TOK_LWEQ E
   52  | E • TOK_DIFFERENT E

    TOK_MULT       shift, and go to state 63
    TOK_DIV        shift, and go to state 64
    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70

    TOK_LOWER      [reduce using rule 44 (E)]
    TOK_GREATER    [reduce using rule 44 (E)]
    TOK_EQUAL      [reduce using rule 44 (E)]
    TOK_DIFFERENT  [reduce using rule 44 (E)]
    TOK_LWEQ       [reduce using rule 44 (E)]
    TOK_GREQ       [reduce using rule 44 (E)]
    $default       reduce using rule 44 (E)


State 76

   43 E: E • TOK_PLUS E
   44  | E • TOK_MINUS E
   45  | E • TOK_MULT E
   45  | E TOK_MULT E •
   46  | E • TOK_DIV E
   47  | E • TOK_EQUAL E
   48  | E • TOK_GREATER E
   49  | E • TOK_LOWER E
   50  | E • TOK_GREQ E
   51  | E • TOK_LWEQ E
   52  | E • TOK_DIFFERENT E

    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70

    TOK_LOWER      [reduce using rule 45 (E)]
    TOK_GREATER    [reduce using rule 45 (E)]
    TOK_EQUAL      [reduce using rule 45 (E)]
    TOK_DIFFERENT  [reduce using rule 45 (E)]
    TOK_LWEQ       [reduce using rule 45 (E)]
    TOK_GREQ       [reduce using rule 45 (E)]
    $default       reduce using rule 45 (E)


State 77

   43 E: E • TOK_PLUS E
   44  | E • TOK_MINUS E
   45  | E • TOK_MULT E
   46  | E • TOK_DIV E
   46  | E TOK_DIV E •
   47  | E • TOK_EQUAL E
   48  | E • TOK_GREATER E
   49  | E • TOK_LOWER E
   50  | E • TOK_GREQ E
   51  | E • TOK_LWEQ E
   52  | E • TOK_DIFFERENT E

    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70

    TOK_LOWER      [reduce using rule 46 (E)]
    TOK_GREATER    [reduce using rule 46 (E)]
    TOK_EQUAL      [reduce using rule 46 (E)]
    TOK_DIFFERENT  [reduce using rule 46 (E)]
    TOK_LWEQ       [reduce using rule 46 (E)]
    TOK_GREQ       [reduce using rule 46 (E)]
    $default       reduce using rule 46 (E)


State 78

   43 E: E • TOK_PLUS E
   44  | E • TOK_MINUS E
   45  | E • TOK_MULT E
   46  | E • TOK_DIV E
   47  | E • TOK_EQUAL E
   48  | E • TOK_GREATER E
   49  | E • TOK_LOWER E
   49  | E TOK_LOWER E •
   50  | E • TOK_GREQ E
   51  | E • TOK_LWEQ E
   52  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 61
    TOK_MINUS      shift, and go to state 62
    TOK_MULT       shift, and go to state 63
    TOK_DIV        shift, and go to state 64
    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70

    TOK_PLUS       [reduce using rule 49 (E)]
    TOK_MINUS      [reduce using rule 49 (E)]
    TOK_MULT       [reduce using rule 49 (E)]
    TOK_DIV        [reduce using rule 49 (E)]
    TOK_LOWER      [reduce using rule 49 (E)]
    TOK_GREATER    [reduce using rule 49 (E)]
    TOK_EQUAL      [reduce using rule 49 (E)]
    TOK_DIFFERENT  [reduce using rule 49 (E)]
    TOK_LWEQ       [reduce using rule 49 (E)]
    TOK_GREQ       [reduce using rule 49 (E)]
    $default       reduce using rule 49 (E)


State 79

   43 E: E • TOK_PLUS E
   44  | E • TOK_MINUS E
   45  | E • TOK_MULT E
   46  | E • TOK_DIV E
   47  | E • TOK_EQUAL E
   48  | E • TOK_GREATER E
   48  | E TOK_GREATER E •
   49  | E • TOK_LOWER E
   50  | E • TOK_GREQ E
   51  | E • TOK_LWEQ E
   52  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 61
    TOK_MINUS      shift, and go to state 62
    TOK_MULT       shift, and go to state 63
    TOK_DIV        shift, and go to state 64
    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70

    TOK_PLUS       [reduce using rule 48 (E)]
    TOK_MINUS      [reduce using rule 48 (E)]
    TOK_MULT       [reduce using rule 48 (E)]
    TOK_DIV        [reduce using rule 48 (E)]
    TOK_LOWER      [reduce using rule 48 (E)]
    TOK_GREATER    [reduce using rule 48 (E)]
    TOK_EQUAL      [reduce using rule 48 (E)]
    TOK_DIFFERENT  [reduce using rule 48 (E)]
    TOK_LWEQ       [reduce using rule 48 (E)]
    TOK_GREQ       [reduce using rule 48 (E)]
    $default       reduce using rule 48 (E)


State 80

   43 E: E • TOK_PLUS E
   44  | E • TOK_MINUS E
   45  | E • TOK_MULT E
   46  | E • TOK_DIV E
   47  | E • TOK_EQUAL E
   47  | E TOK_EQUAL E •
   48  | E • TOK_GREATER E
   49  | E • TOK_LOWER E
   50  | E • TOK_GREQ E
   51  | E • TOK_LWEQ E
   52  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 61
    TOK_MINUS      shift, and go to state 62
    TOK_MULT       shift, and go to state 63
    TOK_DIV        shift, and go to state 64
    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70

    TOK_PLUS       [reduce using rule 47 (E)]
    TOK_MINUS      [reduce using rule 47 (E)]
    TOK_MULT       [reduce using rule 47 (E)]
    TOK_DIV        [reduce using rule 47 (E)]
    TOK_LOWER      [reduce using rule 47 (E)]
    TOK_GREATER    [reduce using rule 47 (E)]
    TOK_EQUAL      [reduce using rule 47 (E)]
    TOK_DIFFERENT  [reduce using rule 47 (E)]
    TOK_LWEQ       [reduce using rule 47 (E)]
    TOK_GREQ       [reduce using rule 47 (E)]
    $default       reduce using rule 47 (E)


State 81

   43 E: E • TOK_PLUS E
   44  | E • TOK_MINUS E
   45  | E • TOK_MULT E
   46  | E • TOK_DIV E
   47  | E • TOK_EQUAL E
   48  | E • TOK_GREATER E
   49  | E • TOK_LOWER E
   50  | E • TOK_GREQ E
   51  | E • TOK_LWEQ E
   52  | E • TOK_DIFFERENT E
   52  | E TOK_DIFFERENT E •

    TOK_PLUS       shift, and go to state 61
    TOK_MINUS      shift, and go to state 62
    TOK_MULT       shift, and go to state 63
    TOK_DIV        shift, and go to state 64
    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70

    TOK_PLUS       [reduce using rule 52 (E)]
    TOK_MINUS      [reduce using rule 52 (E)]
    TOK_MULT       [reduce using rule 52 (E)]
    TOK_DIV        [reduce using rule 52 (E)]
    TOK_LOWER      [reduce using rule 52 (E)]
    TOK_GREATER    [reduce using rule 52 (E)]
    TOK_EQUAL      [reduce using rule 52 (E)]
    TOK_DIFFERENT  [reduce using rule 52 (E)]
    TOK_LWEQ       [reduce using rule 52 (E)]
    TOK_GREQ       [reduce using rule 52 (E)]
    $default       reduce using rule 52 (E)


State 82

   43 E: E • TOK_PLUS E
   44  | E • TOK_MINUS E
   45  | E • TOK_MULT E
   46  | E • TOK_DIV E
   47  | E • TOK_EQUAL E
   48  | E • TOK_GREATER E
   49  | E • TOK_LOWER E
   50  | E • TOK_GREQ E
   51  | E • TOK_LWEQ E
   51  | E TOK_LWEQ E •
   52  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 61
    TOK_MINUS      shift, and go to state 62
    TOK_MULT       shift, and go to state 63
    TOK_DIV        shift, and go to state 64
    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70

    TOK_PLUS       [reduce using rule 51 (E)]
    TOK_MINUS      [reduce using rule 51 (E)]
    TOK_MULT       [reduce using rule 51 (E)]
    TOK_DIV        [reduce using rule 51 (E)]
    TOK_LOWER      [reduce using rule 51 (E)]
    TOK_GREATER    [reduce using rule 51 (E)]
    TOK_EQUAL      [reduce using rule 51 (E)]
    TOK_DIFFERENT  [reduce using rule 51 (E)]
    TOK_LWEQ       [reduce using rule 51 (E)]
    TOK_GREQ       [reduce using rule 51 (E)]
    $default       reduce using rule 51 (E)


State 83

   43 E: E • TOK_PLUS E
   44  | E • TOK_MINUS E
   45  | E • TOK_MULT E
   46  | E • TOK_DIV E
   47  | E • TOK_EQUAL E
   48  | E • TOK_GREATER E
   49  | E • TOK_LOWER E
   50  | E • TOK_GREQ E
   50  | E TOK_GREQ E •
   51  | E • TOK_LWEQ E
   52  | E • TOK_DIFFERENT E

    TOK_PLUS       shift, and go to state 61
    TOK_MINUS      shift, and go to state 62
    TOK_MULT       shift, and go to state 63
    TOK_DIV        shift, and go to state 64
    TOK_LOWER      shift, and go to state 65
    TOK_GREATER    shift, and go to state 66
    TOK_EQUAL      shift, and go to state 67
    TOK_DIFFERENT  shift, and go to state 68
    TOK_LWEQ       shift, and go to state 69
    TOK_GREQ       shift, and go to state 70

    TOK_PLUS       [reduce using rule 50 (E)]
    TOK_MINUS      [reduce using rule 50 (E)]
    TOK_MULT       [reduce using rule 50 (E)]
    TOK_DIV        [reduce using rule 50 (E)]
    TOK_LOWER      [reduce using rule 50 (E)]
    TOK_GREATER    [reduce using rule 50 (E)]
    TOK_EQUAL      [reduce using rule 50 (E)]
    TOK_DIFFERENT  [reduce using rule 50 (E)]
    TOK_LWEQ       [reduce using rule 50 (E)]
    TOK_GREQ       [reduce using rule 50 (E)]
    $default       reduce using rule 50 (E)


State 84

   23 Li: Li TOK_DACA E TOK_ATUNCI $@4 • IF_BLOCK

    TOK_LACC  shift, and go to state 87

    IF_BLOCK  go to state 88


State 85

   27 Li: Li TOK_Daca E TOK_ATUNCI $@5 • IF_BLOCK $@6 TOK_ALTFEL $@7 IF_BLOCK

    TOK_LACC  shift, and go to state 87

    IF_BLOCK  go to state 89


State 86

   21 Li: Li WHILE_SETUP TOK_WHILE E TOK_EXECUTE • $@3 IF_BLOCK

    $default  reduce using rule 20 ($@3)

    $@3  go to state 90


State 87

   18 IF_BLOCK: TOK_LACC • $@2 Li TOK_RACC

    $default  reduce using rule 17 ($@2)

    $@2  go to state 91


State 88

   23 Li: Li TOK_DACA E TOK_ATUNCI $@4 IF_BLOCK •

    $default  reduce using rule 23 (Li)


State 89

   27 Li: Li TOK_Daca E TOK_ATUNCI $@5 IF_BLOCK • $@6 TOK_ALTFEL $@7 IF_BLOCK

    $default  reduce using rule 25 ($@6)

    $@6  go to state 92


State 90

   21 Li: Li WHILE_SETUP TOK_WHILE E TOK_EXECUTE $@3 • IF_BLOCK

    TOK_LACC  shift, and go to state 87

    IF_BLOCK  go to state 93


State 91

   18 IF_BLOCK: TOK_LACC $@2 • Li TOK_RACC

    ID            shift, and go to state 29
    TOK_INTREG    shift, and go to state 1
    TOK_REAL      shift, and go to state 2
    TOK_ZECIMAL   shift, and go to state 3
    TOK_AFISEAZA  shift, and go to state 30
    TOK_CITESTE   shift, and go to state 31

    ID            [reduce using rule 19 (Li)]
    TOK_INTREG    [reduce using rule 19 (Li)]
    TOK_REAL      [reduce using rule 19 (Li)]
    TOK_ZECIMAL   [reduce using rule 19 (Li)]
    TOK_AFISEAZA  [reduce using rule 19 (Li)]
    TOK_CITESTE   [reduce using rule 19 (Li)]
    $default      reduce using rule 19 (Li)

    D   go to state 32
    Li  go to state 94
    I   go to state 34


State 92

   27 Li: Li TOK_Daca E TOK_ATUNCI $@5 IF_BLOCK $@6 • TOK_ALTFEL $@7 IF_BLOCK

    TOK_ALTFEL  shift, and go to state 95


State 93

   21 Li: Li WHILE_SETUP TOK_WHILE E TOK_EXECUTE $@3 IF_BLOCK •

    $default  reduce using rule 21 (Li)


State 94

   18 IF_BLOCK: TOK_LACC $@2 Li • TOK_RACC
   21 Li: Li • WHILE_SETUP TOK_WHILE E TOK_EXECUTE $@3 IF_BLOCK
   23   | Li • TOK_DACA E TOK_ATUNCI $@4 IF_BLOCK
   27   | Li • TOK_Daca E TOK_ATUNCI $@5 IF_BLOCK $@6 TOK_ALTFEL $@7 IF_BLOCK
   28   | Li • BLOCK
   29   | Li • TOK_COMM
   30   | Li • I TOK_SEP

    ID            shift, and go to state 29
    TOK_INTREG    shift, and go to state 1
    TOK_REAL      shift, and go to state 2
    TOK_ZECIMAL   shift, and go to state 3
    TOK_AFISEAZA  shift, and go to state 30
    TOK_CITESTE   shift, and go to state 31
    TOK_COMM      shift, and go to state 41
    TOK_LACC      shift, and go to state 14
    TOK_RACC      shift, and go to state 96
    TOK_DACA      shift, and go to state 43
    TOK_Daca      shift, and go to state 44

    $default  reduce using rule 32 (WHILE_SETUP)

    D            go to state 32
    BLOCK        go to state 45
    WHILE_SETUP  go to state 46
    I            go to state 47


State 95

   27 Li: Li TOK_Daca E TOK_ATUNCI $@5 IF_BLOCK $@6 TOK_ALTFEL • $@7 IF_BLOCK

    $default  reduce using rule 26 ($@7)

    $@7  go to state 97


State 96

   18 IF_BLOCK: TOK_LACC $@2 Li TOK_RACC •

    $default  reduce using rule 18 (IF_BLOCK)


State 97

   27 Li: Li TOK_Daca E TOK_ATUNCI $@5 IF_BLOCK $@6 TOK_ALTFEL $@7 • IF_BLOCK

    TOK_LACC  shift, and go to state 87

    IF_BLOCK  go to state 98


State 98

   27 Li: Li TOK_Daca E TOK_ATUNCI $@5 IF_BLOCK $@6 TOK_ALTFEL $@7 IF_BLOCK •

    $default  reduce using rule 27 (Li)
